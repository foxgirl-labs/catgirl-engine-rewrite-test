# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install Rust
      - name: Make Tools Directory
        run: mkdir -p ${{ github.workspace }}/tools
      - name: Download Rust Installer
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > ${{ github.workspace }}/tools/rust.sh
      - name: Make Rust Installer Executable
        run: chmod +x ${{ github.workspace }}/tools/rust.sh
      - name: Install Rust
        run: ${{ github.workspace }}/tools/rust.sh -y
      - name: Load Cargo Environment
        run: source "$HOME/.cargo/env"

      # Install Rust Nightly Toolchains
      - name: Set Rust To The Nightly Toolchains
        run: $HOME/.cargo/bin/rustup default nightly

      # Setup Rust Build Caching
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "wasm32-pages-rust"

      # Add Build Targets
      - name: Add x86_64 GNU Build Target
        run: $HOME/.cargo/bin/rustup target add wasm32-unknown-unknown

      # Install Wasm-Pack
      - name: Install Wasm-Pack
        run: |
          export RUSTFLAGS="-Z threads=`nproc --all` -Z time-passes -Z self-profile"
          $HOME/.cargo/bin/cargo install -j `nproc --all` wasm-pack

      - name: Setup Build Folder
        run: mkdir -p ${{ github.workspace }}/build

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Build with Jekyll
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ${{ github.workspace }}/.github/site
          destination: ${{ github.workspace }}/_site

      # Compile Program
      - name: Build Program
        run: |
          export RUSTFLAGS="-Z threads=`nproc --all` -Z time-passes -Z self-profile"
          $HOME/.cargo/bin/wasm-pack build --target web --verbose --release --bin catgirl-engine --timings -d ${{ github.workspace }}/.github/site

      # Build Docs
      - name: Build Docs
        run: |
          export RUSTFLAGS="-Z threads=`nproc --all`"
          $HOME/.cargo/bin/cargo doc -j `nproc --all` --target=wasm32-unknown-unknown --release --lib --workspace

      # Copy Docs
      - name: Copy Docs
        run: cp -a ${{ github.workspace }}/target/wasm32-unknown-unknown/doc ${{ github.workspace }}/_site/docs

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy to Github Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
